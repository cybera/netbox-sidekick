# Generated by Django 3.1.3 on 2021-04-09 05:03

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dcim', '0122_standardize_name_length'),
        ('ipam', '0043_add_tenancy_to_aggregates'),
        ('tenancy', '0011_standardize_name_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('title', models.CharField(blank=True, default='', max_length=255)),
                ('email', models.EmailField(blank=True, default='', max_length=254)),
                ('phone', models.CharField(blank=True, default='', max_length=255)),
                ('comments', models.TextField(blank=True, default='')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='ContactType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LogicalSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Logical System',
                'verbose_name_plural': 'Logical Systems',
            },
        ),
        migrations.CreateModel(
            name='NetworkServiceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.CharField(blank=True, default='', max_length=255)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Network Service Type',
                'verbose_name_plural': 'Network Service Types',
            },
        ),
        migrations.CreateModel(
            name='RoutingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Routing Type',
                'verbose_name_plural': 'Routing Types',
            },
        ),
        migrations.CreateModel(
            name='MemberContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='netbox_sidekick.contact')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tenancy.tenant')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='netbox_sidekick.contacttype')),
            ],
            options={
                'ordering': ['member', 'contact', 'type'],
            },
        ),
        migrations.CreateModel(
            name='NetworkService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('legacy_id', models.CharField(blank=True, default='', max_length=255)),
                ('start_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('comments', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tenancy.tenant')),
                ('network_service_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='network_service_type', to='netbox_sidekick.networkservicetype')),
            ],
            options={
                'ordering': ['member', 'network_service_type'],
                'verbose_name': 'Network Service',
                'verbose_name_plural': 'Network Services',
            },
        ),
        migrations.CreateModel(
            name='NetworkServiceDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('vlan', models.IntegerField(blank=True, null=True)),
                ('comments', models.TextField(blank=True)),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='network_service_devices', to='dcim.device')),
                ('interface', models.CharField(blank=True, max_length=255, null=True)),
                ('network_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='network_service_devices', to='netbox_sidekick.networkservice')),
                ('legacy_id', models.CharField(blank=True, default='', max_length=255)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Network Service Device',
                'verbose_name_plural': 'Network Service Devices',
            },
        ),
        migrations.CreateModel(
            name='NetworkServiceL2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('vlan', models.IntegerField(blank=True, null=True)),
                ('comments', models.TextField(blank=True)),
                ('legacy_id', models.CharField(blank=True, default='', max_length=255)),
                ('network_service_device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='network_service_l2', to='netbox_sidekick.networkservicedevice')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Network Service L3',
                'verbose_name_plural': 'Network Service L3s',
            },
        ),
        migrations.CreateModel(
            name='NetworkServiceL3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('asn', models.CharField(blank=True, default='', max_length=255)),
                ('ipv4_unicast', models.BooleanField(default=True)),
                ('ipv4_multicast', models.BooleanField(default=True)),
                ('ipv4_prefixes', models.TextField(blank=True, null=True)),
                ('ipv6_unicast', models.BooleanField(default=False)),
                ('ipv6_multicast', models.BooleanField(default=False)),
                ('ipv6_prefixes', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True)),
                ('logical_system', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='network_service_l3', to='netbox_sidekick.logicalsystem')),
                ('member_router_address_ipv4', models.CharField(blank=True, default='', max_length=255)),
                ('member_router_address_ipv6', models.CharField(blank=True, default='', max_length=255)),
                ('provider_router_address_ipv4', models.CharField(blank=True, default='', max_length=255)),
                ('provider_router_address_ipv6', models.CharField(blank=True, default='', max_length=255)),
                ('routing_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='network_service_l3', to='netbox_sidekick.routingtype')),
                ('legacy_id', models.CharField(blank=True, default='', max_length=255)),
                ('network_service_device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='network_service_l3', to='netbox_sidekick.networkservicedevice')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'Network Service L3',
                'verbose_name_plural': 'Network Service L3s',
            },
        ),
        migrations.CreateModel(
            name='NIC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('admin_status', models.IntegerField(default=True)),
                ('oper_status', models.IntegerField(default=True)),
                ('out_octets', models.BigIntegerField(default=0)),
                ('in_octets', models.BigIntegerField(default=0)),
                ('out_unicast_packets', models.BigIntegerField(default=0)),
                ('in_unicast_packets', models.BigIntegerField(default=0)),
                ('out_nunicast_packets', models.BigIntegerField(default=0)),
                ('in_nunicast_packets', models.BigIntegerField(default=0)),
                ('out_errors', models.BigIntegerField(default=0)),
                ('in_errors', models.BigIntegerField(default=0)),
                ('interface', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='nic', to='dcim.interface')),
            ],
            options={
                'ordering': ['interface__device__name', 'interface__name'],
                'verbose_name': 'NIC',
                'verbose_name_plural': 'NICs',
            },
        ),
        migrations.CreateModel(
            name='NetworkServiceGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.CharField(blank=True, default='', max_length=255)),
                ('network_services', models.ManyToManyField(to='netbox_sidekick.NetworkService')),
            ],
            options={
                'verbose_name': 'Network Service Group',
                'verbose_name_plural': 'Network Service Groups',
                'ordering': ['name'],
            },
        ),
    ]
