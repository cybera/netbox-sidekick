# Generated by Django 3.0.6 on 2020-08-20 21:33

from django.db import migrations, models
import django.db.models.deletion
import ipam.fields


class Migration(migrations.Migration):

    dependencies = [
        ('dcim', '0106_role_default_color'),
        ('netbox_sidekick', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LogicalSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RoutingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='networkservice',
            name='active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='networkservice',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='networkservice',
            name='device',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='network_services', to='dcim.Device'),
        ),
        migrations.AddField(
            model_name='networkservice',
            name='interface',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='network_services', to='dcim.Interface'),
        ),
        migrations.AddField(
            model_name='networkservice',
            name='ipv4_multicast',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='networkservice',
            name='ipv4_unicast',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='networkservice',
            name='ipv6_multicast',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='networkservice',
            name='ipv6_unicast',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='networkservice',
            name='member_router_address_ipv4',
            field=ipam.fields.IPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='networkservice',
            name='member_router_address_ipv6',
            field=ipam.fields.IPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='networkservice',
            name='provider_router_address_ipv4',
            field=ipam.fields.IPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='networkservice',
            name='provider_router_address_ipv6',
            field=ipam.fields.IPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='networkservice',
            name='logical_system',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='network_services', to='netbox_sidekick.LogicalSystem'),
        ),
        migrations.AddField(
            model_name='networkservice',
            name='routing_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='network_services', to='netbox_sidekick.RoutingType'),
        ),
    ]
